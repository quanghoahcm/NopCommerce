@model ManufacturerModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var manufacturerUrl = Url.RouteUrl("Manufacturer", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(manufacturerUrl);
    }
}
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
<div class="page manufacturer-page from-panel">
    <div class="page-title panel-heading">
        <h1>@Model.Name</h1>
    </div>
    <div class="page-body panel-body">
        @Html.Widget("manufacturerdetails_top", Model.Id)
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="manufacturer-description">
                @Html.Raw(Model.Description)
            </div>
        }
        @Html.Widget("manufacturerdetails_before_featured_products", Model.Id)
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>
                <div>
                    @foreach (var product in Model.FeaturedProducts)
                    {
                        <div class="item-box col-md-3">
                            <div class="thumbnail">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        @Html.Widget("manufacturerdetails_after_featured_products", Model.Id)
        <div class="row">
            <div class="col-md-12">
                <div class="product-selectors clearfix">
                    @*view mode*@
                    @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                    {
                        <div class="product-viewmode col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 remove_right_padding product-span">
                                    <label>@T("Catalog.ViewMode")</label>
                                </div>
                                <div class="col-md-6 remove_left_padding">
                                    @Html.DropDownList("products-viewmode", Model.PagingFilteringContext.AvailableViewModes, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                            </div>
                        </div>
                    }
                    @*sorting*@
                    @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                    {

                        <div class="product-sorting col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 remove_right_padding product-span">
                                    <label>@T("Catalog.OrderBy")</label>
                                </div>
                                <div class="col-md-8 remove_left_padding">
                                    @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                            </div>
                        </div>
                    }
                    @*page size*@
                    @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                    {
                        <div class="product-page-size col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 product-span">
                                    <label>@T("Catalog.PageSize")</label>
                                </div>
                                <div class="col-md-4 remove_left_padding remove_right_padding">
                                    @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                                <div class="col-md-4 page remove_left_padding">
                                    <label>@T("Catalog.PageSize.PerPage")</label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        @Html.Widget("manufacturerdetails_before_filters", Model.Id)
        @*filtering*@
        @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
        {
            @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
        }
        @Html.Widget("manufacturerdetails_before_product_list", Model.Id)
        @*product list*@
        @if (Model.Products.Count > 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
                @*list mode*@
                <div class="product-list row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="item-box col-md-12 product-list-box">
                            <div class="thumbnail">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                @*grid mode*@
                <div class="product-grid row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="item-box col-xs-12 col-sm-4 col-md-4 product-align">
                            <div class="thumbnail">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    }
                </div>
            }
        }
        <div class="pager clearfix">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>
        @Html.Widget("manufacturerdetails_bottom", Model.Id)
    </div>
</div>

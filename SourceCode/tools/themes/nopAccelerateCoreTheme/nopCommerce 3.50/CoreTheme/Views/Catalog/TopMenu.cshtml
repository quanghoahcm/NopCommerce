@model TopMenuModel
@using System.Text.RegularExpressions
@using Nop.Web.Models.Catalog;
@{
    var isRtl = this.ShouldUseRtlTheme();
}
@helper Bracket_Remover(string input) 
{
        int index1 = input.IndexOf('(');
        string result = input.Remove(index1,1);

        index1 = result.IndexOf(')');
        result = result.Remove(index1,1);
    
    @Html.Raw(@result)
    


}
@helper RenderSubCategoryLine(CategorySimpleModel category, int level)
{
    <li class="dropdown">
        <a class="dropdown-toggle" href="@Url.RouteUrl("Category", new { SeName = category.SeName })" data-toggle="dropdown" role="button" aria-expanded="false">
            @category.Name
            &nbsp;
            <span class="caret hidden-lg hidden-md hidden-sm"></span>

            @if (category.NumberOfProducts.HasValue)
            {
                <span class="head-number op-number">

                    @if (category.NumberOfProducts.Value < 0)
                    {
                        @:0@(category.NumberOfProducts.Value)
                        }

                    @T("Categories.TotalProducts", category.NumberOfProducts.Value).ToString()
                </span>
                @*<span class="caret"></span>*@
                <span>&nbsp;</span>
            }


        </a>

        <ul class="dropdown-menu" role="menu">
            @foreach (var subCategory in  category.SubCategories)
            {
                @RenderCategoryLine(subCategory, level + 1)
            }
        </ul>
        
    </li>
}

@helper RenderCategoryLine(CategorySimpleModel category, int level)
{
    if(category.SubCategories.Count > 0)
    {
        @RenderSubCategoryLine(category, 0)
    }
    else
    {
         <li>
            <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name
            @if (category.NumberOfProducts.HasValue)
            {
                <span class="head-number op-number">
                    @if(category.NumberOfProducts.Value < 0)
                    {
                        @:0@(category.NumberOfProducts.Value)
                    }
                    @T("Categories.TotalProducts", category.NumberOfProducts.Value)
                </span>
                <span>&nbsp;</span>

            }
            
            </a>
         </li>
    }
}
<nav role="navigation" class="navbar navbar-inverse">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
        <button data-target="#mobile-menu" data-toggle="collapse" class="navbar-toggle" type="button">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>

    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div id="mobile-menu" class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
            @Html.Widget("header_menu_before")
            <li><a href="@Url.RouteUrl("HomePage")"><i class="fa fa-home fa-fw"></i></a></li>
            @foreach (var category in Model.Categories)
            {
                @RenderCategoryLine(category, 0)
            }
            @foreach (var topic in Model.Topics)
            {
                <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
            }
           @if (Model.Categories.Count == 0 && Model.Topics.Count == 0)
           {
                //no categories or topis to display?
                //in this cae let's diplay some default menu items
                <li><a href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
                if (Model.RecentlyAddedProductsEnabled)
                {
                    <li><a href="@Url.RouteUrl("RecentlyAddedProducts")">@T("Products.NewProducts")</a>
                    </li>
                }
                <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li>
                <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                if (Model.BlogEnabled)
                {
                    <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                }
                if (Model.ForumEnabled)
                {
                    <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                }
                <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
            }
            @Html.Widget("header_menu_after")
        </ul>
    </div><!-- /.navbar-collapse -->
</nav>
@model SearchModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
<script type="text/javascript">
    $(document).ready(function () {

        $("#@Html.FieldIdFor(model => model.As)").click(toggleAdvancedSearch);

        toggleAdvancedSearch();
    });

    function toggleAdvancedSearch() {

        if ($('#@Html.FieldIdFor(model => model.As)').is(':checked')) {
            $('#advanced-search-block').show();
        }
        else {
            $('#advanced-search-block').hide();
        }
    }
</script>
<div class="page search-page from-panel">
    <div class="page-title panel-heading">
        <h1>@T("Search")</h1>
    </div>
    <div class="page-body panel-body">
        <div class="search-input form-horizontal">
            @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
            {
                
                <div class="basic-search">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Q, new { @class = "control-label col-sm-3 col-md-3" })
                        <div class="col-sm-5 col-md-5">
                            @Html.TextBoxFor(model => model.Q, new { @class = "search-text form-control" })
                        </div>
                    </div>
                    @Html.Widget("productsearch_page_basic")
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-md-offset-3 col-sm-10 col-md-10">
                            <label class="checkbox" for="accept-privacy-policy">
                                @Html.CheckBoxFor(model => model.As)
                                @Html.LabelFor(model => model.As)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="advanced-search" id="advanced-search-block">
                    @if (Model.AvailableCategories.Count > 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cid, new { @class = "control-label col-sm-3 col-md-3" })
                            <div class="col-sm-5 col-md-5">
                                @Html.DropDownListFor(model => model.Cid, Model.AvailableCategories, new { @class = "form-control dropdown-toggle category-iteam category-select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-3 col-md-offset-3 col-sm-10 col-md-10">
                                <label class="checkbox" for="accept-privacy-policy">
                                    @Html.CheckBoxFor(model => model.Isc)
                                    @Html.LabelFor(model => model.Isc)
                                </label>
                            </div>
                        </div>

                    }
                    @if (Model.AvailableManufacturers.Count > 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mid, new { @class = "control-label col-sm-3 col-md-3" })
                            <div class="col-sm-5 col-md-5">
                                @Html.DropDownListFor(model => model.Mid, Model.AvailableManufacturers, new { @class = "form-control category-iteam dropdown-toggle" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        <label class="control-label col-sm-3 col-md-3">@T("Search.PriceRange")</label>
                        <div class="col-sm-9 col-md-9">
                            <div class="row">
                                <span class="price-range">
                                    <span class="price-range-from">@T("Search.PriceRange.From")</span>
                                    @Html.TextBoxFor(model => model.Pf, new { @class = "price-from form-control" })
                                    <span class="price-range-to">@T("Search.PriceRange.To")</span>
                                    @Html.TextBoxFor(model => model.Pt, new { @class = "price-to form-control" })
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-3 col-md-offset-3 col-sm-9 col-md-9">
                            <label class="checkbox" for="accept-privacy-policy">
                                @Html.CheckBoxFor(model => model.Sid)
                                @Html.LabelFor(model => model.Sid)
                            </label>
                        </div>
                    </div>
                    @Html.Widget("productsearch_page_advanced")
                </div>
                <div class="form-group row">
                    <div class="col-sm-offset-3 col-md-offset-3 col-sm-6 col-md-6">
                        <input type="submit" class="btn btn-primary" value="@T("Search")" />
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="product-selectors clearfix">
                    @*view mode*@
                    @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                    {
                        <div class="product-viewmode col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 remove_right_padding product-span">
                                    <label>@T("Catalog.ViewMode")</label>
                                </div>
                                <div class="col-md-6 remove_left_padding">
                                    @Html.DropDownList("products-viewmode",Model.PagingFilteringContext.AvailableViewModes, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                            </div>
                        </div>
                    }
                    @*sorting*@
                    @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                    {
                        <div class="product-sorting col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 remove_right_padding product-span">
                                    <label>@T("Catalog.OrderBy")</label>
                                </div>
                                <div class="col-md-8 remove_left_padding">
                                    @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                            </div>
                        </div>
                    }
                    @*page size*@
                    @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                    {
                        <div class="product-page-size col-xs-12 col-sm-4 col-md-4 pull-text-center">
                            <div class="row">
                                <div class="col-md-4 product-span">
                                    <label>@T("Catalog.PageSize")</label>
                                </div>
                                <div class="col-md-4 remove_left_padding remove_right_padding">
                                    @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                                </div>
                                <div class="col-md-4 page">
                                    <label>@T("Catalog.PageSize.PerPage")</label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="search-results error">
            @if (!String.IsNullOrEmpty(Model.Warning))
            {
                <strong class="warning">
                    @Model.Warning
                </strong>
            }
            @if (Model.NoResults)
            {
                <strong class="result validation-summary-errors">
                    @T("Search.NoResultsText")
                </strong>
            }
            @*product list*@
            @if (Model.Products.Count > 0)
            {
                if (Model.PagingFilteringContext.ViewMode == "list")
                {
                    @*list mode*@
                    <div class="product-list row">
                            @foreach (var product in Model.Products)
                            {
                                <div class="item-box col-md-12 product-list-box">
                                    <div class="thumbnail">
                                        @Html.Partial("_ProductBox", product)
                                    </div>
                                </div>
                            }
                    </div>
                }
                else
                {
                    @*grid mode*@
                    <div class="product-grid row">
                        @foreach (var product in Model.Products)
                        {
                            <div class="item-box col-xs-12 col-sm-4 col-md-4 product-align ">
                                <div class="thumbnail">
                                    @Html.Partial("_ProductBox", product)
                                </div>
                           </div>
                        }
                    </div>
                }
            }
            <div class="pager">
                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("as").BooleanParameterName("isc").BooleanParameterName("sid")
            </div>
        </div>
    </div>
</div>
